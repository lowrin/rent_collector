"""
Django settings for django_main project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# print(os.environ)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = str(os.environ["SECRET_KEY"])
# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = int(os.environ["DEBUG"])

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "django_filters",
    "django_cron",
    "rents",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "csp.middleware.CSPMiddleware",
]

AUTHENTICATION_BACKENDS = ("django.contrib.auth.backends.ModelBackend",)


# drf
REST_FRAMEWORK = {
    "DEFAULT_FILTER_BACKENDS": ["django_filters.rest_framework.DjangoFilterBackend"],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_RENDERER_CLASSES": ["rest_framework.renderers.JSONRenderer"],
}

# cron
DJANGO_CRON_LOCK_BACKEND = "django_cron.backends.lock.file.FileLock"
DJANGO_CRON_DELETE_LOGS_OLDER_THAN = 180
CRON_CLASSES = [
    "stocks.services.crons.test_cron.MyCronJob",
    "stocks.services.crons.update_eod_prices.MyCronJob",
]

ADMINS = [("Jonas", "pfeifer.jonas+visu@gmail.com")]


EMAIL_HOST = "smtp.ionos.de"
DEFAULT_FROM_EMAIL = "jonas@visualportfolio.net"
EMAIL_HOST_USER = "jonas@visualportfolio.net"
EMAIL_HOST_PASSWORD = "nMXxLvAybY7tCwUD2Kyb"
EMAIL_PORT = 587
EMAIL_USE_TLS = True


ROOT_URLCONF = "django_main.urls"


TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "rents", "templates", "rents"),
            os.path.join(BASE_DIR, "rents", "templates"),
            os.path.join(BASE_DIR, "rents", "templates", "registration"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "django_main.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": str(os.environ["SQL_ENGINE"]),
        "NAME": str(os.environ["SQL_DATABASE"]),
        "USER": str(os.environ["SQL_USER"]),
        "PASSWORD": str(os.environ["SQL_PASSWORD"]),
        "HOST": str(os.environ["SQL_HOST"]),
        "PORT": str(os.environ["SQL_PORT"]),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "de-DE"

TIME_ZONE = "Europe/Berlin"
USE_TZ = True

USE_I18N = True

USE_L10N = True


APPEND_SLASH = True
PREPEND_WWW = not DEBUG


# security
SESSION_COOKIE_SECURE = not DEBUG
SESSION_COOKIE_HTTPONLY = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_HTTPONLY = not DEBUG

X_FRAME_OPTIONS = "DENY"

SECURE_HSTS_SECONDS = 15768000  # set low, but when site is ready for deployment, set to at least 15768000 (6 months)
SECURE_HSTS_INCLUDE_SUBDOMAINS = not DEBUG
SECURE_HSTS_PRELOAD = not DEBUG

SECURE_BROWSER_XSS_FILTER = not DEBUG
SECURE_CONTENT_TYPE_NOSNIFF = not DEBUG


CSP_DEFAULT_SRC = ("'self'", "reqres.in")
CSP_STYLE_SRC = (
    "'self'",
    "'unsafe-inline'",
    "fonts.googleapis.com",
    "cdnjs.cloudflare.com",
)
CSP_SCRIPT_SRC = (
    "'self'",
    "'unsafe-inline'",
    "cdnjs.cloudflare.com",
    "www.amcharts.com",
)
CSP_IMG_SRC = ("'self'",)
CSP_FONT_SRC = (
    "'self'",
    "fonts.gstatic.com",
    "fonts.googleapis.com",
    "cdnjs.cloudflare.com",
)
CSP_INCLUDE_NONCE_IN = ("script-src",)


# needed for make reverse working with caddy (reverse proxy)
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = "/data/caddy_django_static/static/"

LOGIN_URL = "/accounts/login/"
LOGIN_REDIRECT_URL = "/"

LOGOUT_REDIRECT_URL = "/"

REQUEST_IGNORE_PATHS = (r"^admin/",)
